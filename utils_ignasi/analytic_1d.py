import numpy as npimport matplotlibimport matplotlib.pyplot as pltalpha = 1e-1beta = 1itr = 5000rept = 10def plot_thetas(thetas, fig, ax, colors):    #    x, y = list(zip(*thetas))    ax.scatter(x, y, color=colors)    # import pdb; pdb.set_trace()    # plt.plot(x, y)    # Optionally add a colorbardef dice_grad(theta):    a, b = theta    grad = np.array([5 * ((a - 2 * alpha * a **5) **5), (1 - 2 * alpha) * b])    return gradif __name__ == "__main__":    fig, ax = plt.subplots(figsize=(10, 10))    cmap = matplotlib.cm.get_cmap('viridis')    z = range(itr)    normalize = matplotlib.colors.Normalize(vmin=min(z), vmax=max(z))    colors = [cmap(normalize(value)) for value in z]    for _ in range(rept):        theta = np.random.uniform(-1, 1, size=(2,))        thetas = []        for i in range(itr):            grad = dice_grad(theta)            theta -= beta * grad            thetas.append(theta.copy())        plot_thetas(thetas, fig, ax, colors)    cax, _ = matplotlib.colorbar.make_axes(ax)    cbar = matplotlib.colorbar.ColorbarBase(cax, cmap=cmap, norm=normalize)    plt.show()